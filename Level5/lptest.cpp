/*              Author: Michael Marven
 *        Date Created: 05/26/17
 *  Date Last Modified: 06/26/17
 *
 */

#include <vector>
#include <iostream>

#include "CommonDefs.h"
#include "MoveValidator.h"
#include "KnightGraph.h"

int main(int argc, char *argv[])
{
    // Program to test KnightGraph class

    // Create an 32x32 board filled with chars
    std::vector<std::vector<char> > board = 
        { {'.','.','.','.','.','.','.','.','B','.','.','.','L','L','L','.',
           '.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.'},//0
          {'.','.','.','.','.','.','.','.','B','.','.','.','L','L','L','.',
           '.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.'},//1
          {'.','.','.','.','.','.','.','.','B','.','.','.','L','L','L','.',
           '.','.','L','L','L','.','.','.','.','.','.','.','.','.','.','.'},//2
          {'.','.','.','.','.','.','.','.','B','.','.','.','L','L','L','.',
           '.','L','L','L','.','.','.','R','R','.','.','.','.','.','.','.'},//3
          {'.','.','.','.','.','.','.','.','B','.','.','.','L','L','L','L',
           'L','L','L','L','.','.','.','R','R','.','.','.','.','.','.','.'},//4
          {'.','.','.','.','.','.','.','.','B','.','.','.','L','L','L','L',
           'L','L','.','.','.','.','.','.','.','.','.','.','.','.','.','.'},//5
          {'.','.','.','.','.','.','.','.','B','.','.','.','.','.','.','.',
           '.','.','.','.','.','R','R','.','.','.','.','.','.','.','.','.'},//6
          {'.','.','.','.','.','.','.','.','B','B','.','.','.','.','.','.',
           '.','.','.','.','.','R','R','.','.','.','.','.','.','.','.','.'},//7
          {'.','.','.','.','.','.','.','.','W','B','B','.','.','.','.','.',
           '.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.'},//8
          {'.','.','.','R','R','.','.','.','W','W','B','B','B','B','B','B',
           'B','B','B','B','.','.','.','.','.','.','.','.','.','.','.','.'},//9
          {'.','.','.','R','R','.','.','.','W','W','.','.','.','.','.','.',
           '.','.','.','B','.','.','.','.','.','.','.','.','.','.','.','.'},//10
          {'.','.','.','.','.','.','.','.','W','W','.','.','.','.','.','.',
           '.','.','.','B','.','.','.','.','.','.','T','.','.','.','.','.'},//11
          {'.','.','.','W','W','W','W','W','W','W','.','.','.','.','.','.',
           '.','.','.','B','.','.','.','.','.','.','.','.','.','.','.','.'},//12
          {'.','.','.','W','W','W','W','W','W','W','.','.','.','.','.','.',
           '.','.','.','B','.','.','R','R','.','.','.','.','.','.','.','.'},//13
          {'.','.','.','W','W','.','.','.','.','.','.','.','.','.','.','B',
           'B','B','B','B','.','.','R','R','.','W','W','W','W','W','W','W'},//14
          {'.','.','.','W','W','.','.','.','.','.','.','.','.','.','.','B',
           '.','.','.','.','.','.','.','.','.','W','.','.','.','.','.','.'},//15
          {'W','W','W','W','.','.','.','.','.','.','.','.','.','.','.','B',
           '.','.','.','W','W','W','W','W','W','W','.','.','.','.','.','.'},//16
          {'.','.','.','W','W','W','W','W','W','W','.','.','.','.','.','B',
           '.','.','.','.','.','.','.','.','.','.','.','.','B','B','B','B'},//17
          {'.','.','.','W','W','W','W','W','W','W','.','.','.','.','.','B',
           'B','B','.','.','.','.','.','.','.','.','.','.','B','.','.','.'},//18
          {'.','.','.','W','W','W','W','W','W','W','.','.','.','.','.','.',
           '.','B','W','W','W','W','W','W','B','B','B','B','B','.','.','.'},//19
          {'.','.','.','W','W','W','W','W','W','W','.','.','.','.','.','.',
           '.','B','W','W','W','W','W','W','B','.','.','.','.','.','.','.'},//20
          {'.','.','.','.','.','.','.','.','.','.','.','B','B','B','.','.',
           '.','.','.','.','.','.','.','.','B','B','.','.','.','.','.','.'},//21
          {'.','.','.','.','.','R','R','.','.','.','.','B','.','.','.','.',
           '.','.','.','.','.','.','.','.','.','B','.','.','.','.','.','.'},//22
          {'.','.','.','.','.','R','R','.','.','.','.','B','.','.','.','.',
           '.','.','.','.','.','.','.','.','.','B','.','T','.','.','.','.'},//23
          {'.','.','.','.','.','.','.','.','.','.','.','B','.','.','.','.',
           '.','R','R','.','.','.','.','.','.','B','.','.','.','.','.','.'},//24
          {'.','.','.','.','.','.','.','.','.','.','.','B','.','.','.','.',
           '.','R','R','.','.','.','.','.','.','.','.','.','.','.','.','.'},//25
          {'.','.','.','.','.','.','.','.','.','.','.','B','.','.','.','.',
           '.','.','.','.','.','.','R','R','.','.','.','.','.','.','.','.'},//26
          {'.','.','.','.','.','.','.','.','.','.','.','B','.','.','.','.',
           '.','.','.','.','.','.','R','R','.','.','.','.','.','.','.','.'},//27
          {'.','.','.','.','.','.','.','.','.','.','.','B','.','.','.','.',
           '.','.','.','.','.','.','R','R','.','.','.','.','.','.','.','.'},//28
          {'.','.','.','.','.','.','.','.','.','.','.','B','.','.','.','.',
           '.','.','.','.','.','.','R','R','.','.','.','.','.','.','.','.'},//29
          {'.','.','.','.','.','.','.','.','.','.','.','B','.','.','.','.',
           '.','.','.','.','.','.','R','R','.','.','.','.','.','.','.','.'},//30
          {'.','.','.','.','.','.','.','.','.','.','.','B','.','.','.','.',
           '.','.','.','.','.','.','R','R','.','.','.','.','.','.','.','.'},//31
        };

    MoveValidator *validator = new MoveValidator(board);
    KnightGraph   *graph     = new KnightGraph(board);

    // int start_x = -1;
    // int start_y = 88;
    int start_x = 15;
    int start_y = 3;
    int end_x   = 0;
    int end_y   = 31;

    // graph->dfsGraphBuild(start_x, start_y);
    graph->daShortestPath(start_x, start_y, end_x, end_y);
    
    std::vector<Vertex> moves = graph->getPathToEnd();
    
    bool printBoard = true;
    // Comment above and uncomment below to test without board printing
    // bool printBoard = false;
    validator->validateMoves(moves, printBoard);

    // Delete pointers
    if (validator)
    {
        delete validator;
    }

    if (graph)
    {
        delete graph;
    }

    return 0;
}
